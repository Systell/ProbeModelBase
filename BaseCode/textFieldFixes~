First, when the user selects/highlights multiple lines of text, only the first and last lines are highlgihted. So if three lines of text are selected/highlighted, the seconds line will not get a highlight. If the target platform uses the canvas renderer, then the issue would be fixed if line 262 in openfl._internal.renderer.canvas.CanvasTextField.hx, which is:

} else if ((group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) || (group.startIndex <= textField.__selectionIndex && group.endIndex >= textField.__selectionIndex)) {

was changed to:

} else if (!((textField.__caretIndex < group.startIndex && textField.__selectionIndex < group.startIndex) || (textField.__caretIndex > group.endIndex && textField.__selectionIndex > group.endIndex))) {


Second, the right side of the highlight rectangles aren't where they should be. This is because the text measuring is done in a subtly wrong way; the width of each individual character is found and then summed, but the width of a characters (particularly spaces) is not necessarily independent of the length of other characters. This issue can be resolved by changing line 603 in openfl._internal.text.TextEngine.hx from:

advances.push (__context.measureText (text.charAt (i)).width);

to:


























advances.push (__context.measureText (text.substring (startIndex,startIndex+i)).width-__context.measureText (text.substring (startIndex,startIndex+i-1)).width);
